function Address(e,t){isAddressValid(e),this.decimalAddress=e,this.binaryAddress=stringToBinary(e),isMaskValid(e,t),this.binaryMask=stringToBinary(t),this.cidrMask=convertDecimalMaskToCIDR(t),this.networkClass=getNetworkInfo(this.decimalAddress,this.cidrMask).networkClass,this.publicOrPrivate=getNetworkInfo(this.decimalAddress,this.cidrMask).publicOrPrivate,this.nshBits=getSignificantBits(this.decimalAddress,this.cidrMask),this.subnetMagicNumber=getSubnetMagicNumber(this.cidrMask),this.networks=generateSubnetIDs(this.decimalAddress,this.cidrMask),this.network=getSubnetOfAddress(this.decimalAddress,this.cidrMask).network,this.addressType=getSubnetOfAddress(this.decimalAddress,this.cidrMask).addressType}function getSubnetOfAddress(e,t){var s=t.slice(1),r=Math.ceil(s/8);0==s&&(r=1);for(var a={network:"",addressType:""},i=[0,0,0,0],n=1;4>=n;n++)r>n&&(i[n-1]=getOctetValue(e,n));for(var o,c,n=0;n<=256/getSubnetMagicNumber(t);n++)if(getOctetValue(e,r)<n*getSubnetMagicNumber(t)){o=(n-1)*getSubnetMagicNumber(t),c=n*getSubnetMagicNumber(t);break}i[r-1]=o;for(var d="",n=0;4>n;n++)d+=i[n]+".";if(a.network=d.substring(0,d.length-1),e==a.network)a.addressType="Network ID";else{for(var l=4;l>=r;l--){if(l!=r&&"255"!=getOctetValue(e,l)){a.addressType="Host";break}if(l==r&&getOctetValue(e,l)!=c-1){a.addressType="Host";break}}""===a.addressType&&(a.addressType="Broadcast Address")}return 0==s&&(a.addressType="Host",a.network="N/A"),a}function generateSubnetIDs(e,t){networks=[];for(var s=Math.ceil(t.slice(1)/8),r=getSubnetMagicNumber(t),a=[0,0,0,0],i=1;4>=i;i++)s>i&&(a[i-1]=getOctetValue(e,i));for(var n=0;256>n;){var o="";a[s-1]=n;for(var i=0;4>i;i++)o+=a[i]+".";networks.push(o.substring(0,o.length-1)),n+=r}return networks}function stringToBinary(e){"/"===e[0]&&(e=convertCIDRMaskToDecimal(e)),tempString="";for(var t=1;4>=t;t++)tempString+=octetToBinary(getOctetValue(e,t))+".";return tempString.substring(0,tempString.length-1)}function octetToBinary(e){tempArray=[0,0,0,0,0,0,0,0];for(var t=7;t>=0;t--)parseInt(e)>=Math.pow(2,t)&&(tempArray[7-t]=1,e-=Math.pow(2,t));return tempArray.join("")}function getSubnetMagicNumber(e){return"/"!=e[0]&&(e=convertDecimalMaskToCIDR(e)),e=e.slice(1),e%8===0?1:Math.pow(2,8-e%8)}function getSignificantBits(e,t){var s={networkBits:"n/a",subnetBits:"n/a",hostBits:"n/a"};return newMaskIn=parseInt(t.slice(1)),s.subnetBits=newMaskIn,s.hostBits=32-s.subnetBits,s}function getNetworkInfo(e,t){t=parseInt(t.slice(1));var s={networkClass:"Error",publicOrPrivate:"Public"};return getOctetValue(e,1)<127&&getOctetValue(e,1)>0&&(s.networkClass="Class A"),127===getOctetValue(e,1)&&(s.networkClass="Loopback and Diagnostic Class",s.publicOrPrivate="Special"),getOctetValue(e,1)<192&&getOctetValue(e,1)>127&&(s.networkClass="Class B"),getOctetValue(e,1)<224&&getOctetValue(e,1)>191&&(s.networkClass="Class C"),getOctetValue(e,1)<240&&getOctetValue(e,1)>223&&(s.networkClass="Class D"),getOctetValue(e,1)<256&&getOctetValue(e,1)>239&&(s.networkClass="Class E"),10==getOctetValue(e,1)&&8==t&&(s.publicOrPrivate="Private"),172==getOctetValue(e,1)&&getOctetValue(e,2)>15&&getOctetValue(e,2)<32&&12==t&&(s.publicOrPrivate="Private"),192==getOctetValue(e,1)&&168==getOctetValue(e,2)&&16==t&&(s.publicOrPrivate="Private"),s}function convertDecimalMaskToCIDR(e){if("/"===e[0])return e;for(var t=0,s=1;4>=s;s++)for(var r=getOctetValue(e,s),a=7;a>=0;a--)r>=Math.pow(2,a)&&(t++,r-=Math.pow(2,a));return"/"+t}function convertCIDRMaskToDecimal(e){if(newMaskIn=e.slice(1),parseInt(newMaskIn)<0||parseInt(newMaskIn)>32)throw new Error("If you give the mask in CIDR notation it must be between 0 and 32");e=convertMaskToBinary(e);for(var t="",s=1;4>=s;s++){for(var r=getOctetValue(e,s).toString(),a=0,i=0;8>i;i++)"1"===r[i]&&(a+=Math.pow(2,7-i));t+=a+"."}return t.substring(0,t.length-1)}function convertMaskToBinary(e){if("/"===e[0]){e=e.slice(1);for(var t=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],s=0;32>s;s++)e>0?(t[s]="1",e--):t[s]="0";stringToReturn="",arrayString=t.join("");for(var r=0;4>r;r++)stringToReturn+=arrayString.substring(8*r,8*(r+1))+".";return stringToReturn.substring(0,stringToReturn.length-1)}return stringToBinary(e)}function isMaskValid(e,t){if("/"==t[0]){if(!/^\/\d+$/.test(t))throw new Error("Mask must contain only digits");t=convertCIDRMaskToDecimal(t)}try{isAddressValid(t)}catch(s){if("First section of address cannot be zero."!==s.message)throw new Error(s.message.replace("Address","Mask")+" Or use CIDR notation")}var r=convertMaskToBinary(t);if(!/^(1|\.)*(0|\.)*$/.test(r))throw new Error("Invalid Mask detected. The binary representation must be sequential ones and the rest zeros")}function isAddressValid(e){if(!/^(\d{1,3})(\.\d{1,3}){3}$/.test(e))throw new Error("Invalid Address detected. Must have 4 sections, separated by periods, with 1 to 3 digits in each.");for(var t=1;4>=t;t++)if(getOctetValue(e,t)<0||getOctetValue(e,t)>255)throw new Error("Address sections must be between 0 and 255.");if(0===getOctetValue(e,1))throw new Error("First section of address cannot be zero.")}function getOctetValue(e,t){var s=t;if(1>s)throw new Error("Wrong value in getOctetValue call");return 1===s?parseInt(-1!=e.indexOf(".")?e.substring(0,e.indexOf(".")):e):getOctetValue(e.substring(e.indexOf(".")+1),s-1)}function fitToContainer(e){e.style.width="100%",e.style.height="100%",e.width=e.offsetWidth,e.height=e.offsetHeight}function calculateButtonValues(){var e=document.getElementById("textArea"),t=e.getContext("2d");address=document.getElementById("address").value,mask=document.getElementById("mask").value;try{var s=new Address(address,mask)}catch(r){return t.clearRect(0,0,e.width,e.height),void alert(r.message)}t.clearRect(0,0,e.width,e.height),t.font="25px lucida";var a=0;t.fillText("Address: "+s.decimalAddress,10,50+25*a),a++,t.fillText("Mask: "+s.cidrMask,10,50+25*a),a++,t.fillText("This is a "+s.publicOrPrivate+" "+s.networkClass+" network.",10,50+25*a),a++,t.fillText("There are "+s.nshBits.subnetBits+" subnet bits and "+s.nshBits.hostBits+" host bits.",10,50+25*a),a++,t.fillText("This address is a "+s.addressType+" in the "+s.network+s.cidrMask+" network.",10,50+25*a),a++,t.fillText("There are "+(Math.pow(2,parseInt(s.nshBits.hostBits))-2<0?"0":Math.pow(2,parseInt(s.nshBits.hostBits))-2)+" possible hosts in this network.",10,50+25*a),a++,a++,t.fillText("Binary form:",10,50+25*a),a++,t.fillText(s.binaryAddress+" : Address",10,50+25*a),a++,t.fillText(s.binaryMask+" : Mask",10,50+25*a),a++}var canvas=document.getElementById("textArea"),ctx=canvas.getContext("2d");fitToContainer(canvas);
